package com.runner.screens;

import com.runner.RunnerGame;
import com.runner.game.GameState;
import com.runner.screens.objects.Tierra;
import com.runner.services.RunnerMusic;
import com.runner.services.RunnerSound;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.ui.Image;
import com.badlogic.gdx.scenes.scene2d.ui.Label;
import com.badlogic.gdx.scenes.scene2d.ui.Table;
import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;

public class MenuScreen extends AbstractScreen{
	private SpriteBatch batch;
	private Tierra tierra;
	
	public MenuScreen(RunnerGame game) {
		super(game);
		tierra = new Tierra();
		tierra.setPosition(200, 100);
	}
	
	@Override
	public void show(){
		super.show();
		
		game.getMusicManager().play(RunnerMusic.TITLE_MUSIC);
		
		Table table = super.getTable();
		table.clear();
		Image image = new Image(game.getAssetManager().get("game.atlas", TextureAtlas.class).findRegion("Space"));
		table.setBackground(image.getDrawable());
		
		Label labelPoints = new Label("Puntos: " + game.getWorld().getGameState().points,getSkin());
		Label labelLevel = new Label("Nivel: " + game.getWorld().getGameState().level,getSkin());

		table.add(labelPoints).colspan(3);
		table.row();
		table.add(labelLevel).colspan(3);
		table.row();
		table.getCell(labelLevel).spaceBottom((float) (Gdx.graphics.getHeight()*0.1));
		
		TextButton planetsGameButton = new TextButton("Planetas", getSkin());
		planetsGameButton.addListener(new ClickListener(){
			public void clicked(InputEvent event, float x, float y){
				game.getSoundManager().play(RunnerSound.CLICK);
				game.setScreen(new PlanetsScreen(game));
			}
		});
		
		TextButton optionsGameButton = new TextButton("Opciones", getSkin());
		optionsGameButton.addListener(new ClickListener(){
			public void clicked(InputEvent event, float x, float y){
				game.getSoundManager().play(RunnerSound.CLICK);
				game.setScreen(new OptionScreen(game));
			}
		});
		
		TextButton exitGameButton = new TextButton("Salir", getSkin());
		exitGameButton.addListener(new ClickListener(){
			public void clicked(InputEvent event, float x, float y){
				game.getSoundManager().play(RunnerSound.CLICK);
				GameState gameState = game.getWorld().getGameState();
				game.getProfileManager().persist(gameState);
				Gdx.app.exit();
			}
		});
		table.add(planetsGameButton).size(250, 50).padBottom(10);
		table.row();
		table.add(optionsGameButton).size(250, 50).padBottom(10);
		table.row();
		table.add(exitGameButton).size(250, 50).padBottom(10);
		table.getCell(planetsGameButton).spaceBottom((float) (Gdx.graphics.getHeight()*0.05));
		table.getCell(optionsGameButton).spaceBottom((float) (Gdx.graphics.getHeight()*0.05));
	}
	
	public void render(float delta){
		tierra.draw(batch);
		super.render(delta);
	}
}
