package com.runner.planets;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.utils.Array;
import com.runner.planets.objects.GameObject;
import com.runner.planets.objects.Ground;
import com.runner.planets.objects.Plank;
import com.runner.planets.objects.Runner;
import com.runner.screens.AbstractScreen;

public class Planeta1 extends BaseGame{
//Planeta Tierra
	private Runner runner;
	private Array<GameObject> list = new Array<GameObject>();
	
	public Planeta1() {
		super();
		runner = new Runner(0,70);
		for(int i = 0; i<AbstractScreen.VIEWPORT_WIDTH; i+=70){
			list.add(new Ground(i,0,0));
			if(i==280||i==560){
				list.add(new Plank(i, 70+97));
			}
		}
	}
	
	@Override
	public void update(float delta) {
		runner.update(Gdx.graphics.getDeltaTime());
		Rectangle temp = new Rectangle(0,0,AbstractScreen.VIEWPORT_WIDTH,70);
		if(runner.hits(temp) != -1){
			runner.action(1,0,70);
		}
		for(GameObject t : list){
			switch(runner.hits(t.getHitBox())){
			case 1:
				runner.action(1, 0, t.getHitBox().y + t.getHitBox().height);
				break;
			case 2:
				runner.action(2, t.getHitBox().x + t.getHitBox().width, 0);
				break;
			case 3:
				runner.action(3, t.getHitBox().x - runner.getHitBox().width - 1, 0);
				break;
			case 4:
				runner.action(4, 0, t.getHitBox().y - runner.getHitBox().height);
				break;
			}
		}
		
	}

	@Override
	public void render() {
		batch.begin();
		runner.draw(batch, atlas);
		for(GameObject t : list){
			t.draw(batch, atlas);
		}
		batch.end();
		
		runner.walk(Gdx.graphics.getDeltaTime());
		if(Gdx.input.isTouched()){
			runner.jump();
		}
	}

	@Override
	public void touch(float x, float y) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void drag(float x, float y) {
		// TODO Auto-generated method stub
		
	}

}
